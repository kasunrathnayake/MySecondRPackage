i=5
ccf(datat[,i],datat[,4],na.action = na.omit)
acf(datat[,i])
diff1x=diff(datat[,i],1)
acf(diff1x, na.action = na.omit)
pacf(diff1x, na.action = na.omit)
auto.arima(datat[,i])
arimamodel = arima(datat[,i], order = c(5,0,0)) #i=5
arimamodel
pwx=arimamodel$residuals
newpwy = filter(datat[,4], filter = c(1,-0.36,-0.71,0.15,0.15,0.21,0.14), sides =1) #i=5
val1=ccf (pwx,newpwy,na.action=na.omit)
val1
i=5
ccf(datat[,i],datat[,4],na.action = na.omit)
acf(datat[,i])
diff1x=diff(datat[,i],1)
acf(diff1x, na.action = na.omit)
pacf(diff1x, na.action = na.omit)
auto.arima(datat[,i])
arimamodel = arima(datat[,i], order = c(5,0,0)) #i=5
pwx=arimamodel$residuals
newpwy = filter(datat[,4], filter = c(1,-0.36,-0.71,0.15,0.15,0.21,0.14), sides =1) #i=5
val1=ccf (pwx,newpwy,na.action=na.omit)
val1
dim(datat)
4169/7
?seq
seq(1,5,2)
seq(1,3,times=2)
rep(1,3,times=3)
rep(1,6,times=3)
seq(from=1,to=3,times=2)
length(rep(c(1,596), each = 7))
length(rep(c(1:596), each = 7))
dim(data)
data=cbind(data,week_no=(length(rep(c(1:596), each = 7)))[1:4169])
max(data$week_no)
min(data$week_no)
head(data$week_no)
data=cbind(data,week_no=((rep(c(1:596), each = 7)))[1:4169])
dim(data)
data=data[,-10]
data=data[,-10]
dim(data)
data=cbind(data,week_no=((rep(c(1:596), each = 7)))[1:4169])
max(data$week_no)
asthmadata=cbind(data,week_no=((rep(c(1:596), each = 7)))[1:4169])
dim(asthmadata)
data=data[,-10]
data=data[,-10]
asthmadata=cbind(data,week_no=((rep(c(1:596), each = 7)))[1:4169])
asthma_week=asthmadata[1,]
colnames(asthmadata)
asthmadata=asthmadata[,c(4:10)]
asthma_week=asthmadata[1,]
dim(asthma_week)
dim(data)
table(is.na(data$`Speed of maximum wind gust in km/h`))
NA_ids=which(is.na(asthmadata$`Speed of maximum wind gust in km/h`)==TRUE)
length(NA_ids)
NA_ids
colnames(asthmadata)
for(j in NA_ids){
asthmadata[j,6]=mean(asthmadata[((j-3):(j-1)),6])
}
table(is.na(data$`Speed of maximum wind gust in km/h`))
table(is.na(asthmadata$`Speed of maximum wind gust in km/h`))
i=1
sub1=asthmadata[asthmadata$week_no==i,]
sub2=sub1[dim(sub1)[1],]
sub1
sub2
colnames(sub2)
colSums(sub1[,2:6])
mean(sub1[,2:6])
colSums(sub1[,2:6])/7
sum(data[1:7,9])/7
colMeans(sub1[,2:6])
sub2[,2:6]=colMeans(sub1[,2:6])
sub2[,1]=colSums(sub1[,1])
sub2[,1]=sum(sub1[,1])
sub1
sub2
asthma_week=asthmadata[1,]
for(i in 1:max(asthmadata$week_no)){
sub1=asthmadata[asthmadata$week_no==i,]
sub2=sub1[dim(sub1)[1],]
sub2[,2:6]=colMeans(sub1[,2:6])
sub2[,1]=sum(sub1[,1])
asthma_week=rbind(asthma_week,sub2)
}
asthma_week=asthma_week[-1,]
dim(asthma_week)
head(asthma_week)
dim(asthmadata)
colnames(asthmadata)
asthma_week=ts(asthma_week)
colnames(data)
###Weekly data generation
#Aloocation of the week number
asthmadata=cbind(data,week_no=((rep(c(1:596), each = 7)))[1:4169])
#Replacing NAs with avg of the most recent 3 wind readings
NA_ids=which(is.na(asthmadata$`Speed of maximum wind gust in km/h`)==TRUE)
for(j in NA_ids){
asthmadata[j,6]=mean(asthmadata[((j-3):(j-1)),6])
}
asthmadata1=asthmadata[,c(4:10)]
#Aggregating data
asthma_week=asthmadata1[1,]
for(i in 1:max(asthmadata1$week_no)){
sub1=asthmadata1[asthmadata1$week_no==i,]
sub2=sub1[dim(sub1)[1],]
sub2[,2:6]=colMeans(sub1[,2:6])
sub2[,1]=sum(sub1[,1])
asthma_week=rbind(asthma_week,sub2)
}
asthma_week=asthma_week[-1,]
asthma_week=ts(asthma_week)
colnames(asthmadata)
View(asthmadata)
###Monthly data generation
asthmadata2=asthmadata[,c(1:9)]
asthma_month=asthmadata2[1,]
table(asthmadata2$Year)
c(2006:2017)
i1 in c(2006:2017)
i1=2006
sub1=asthmadata2[asthmadata2$Year==i1,]
dim(sub1)
2006:2017
i2=1
sub2=sub1[sub1$Month==i2,]
dim(sub2)
colnames(sub2)
asthmadata2=asthmadata[,c(1:9)]
asthma_month=asthmadata2[1,]
for (i1 in 2006:2017) {
sub1=asthmadata2[asthmadata2$Year==i1,]
for (i2 in 1:12) {
sub2=sub1[sub1$Month==i2,]
sub3=sub2[dim(sub2)[1],]
sub3[,5:9]=colMeans(sub2[,5:9])
sub3[,4]=sum(sub2[,4])
asthma_month=rbind(asthma_month,sub3)
}
}
i1
i2
table(data$Year)
max(sub1$Month)
asthmadata2=asthmadata[,c(1:9)]
asthma_month=asthmadata2[1,]
for (i1 in 2006:2017) {
sub1=asthmadata2[asthmadata2$Year==i1,]
for (i2 in 1:max(sub1$Month)) {
sub2=sub1[sub1$Month==i2,]
sub3=sub2[dim(sub2)[1],]
sub3[,5:9]=colMeans(sub2[,5:9])
sub3[,4]=sum(sub2[,4])
asthma_month=rbind(asthma_month,sub3)
}
}
asthma_month=asthma_month[-1,]
asthma_month=ts(asthma_month)
dim(asthma_month)
12*11
colnames(asthma_month)
View(asthma_month)
table(is.na(asthma_month$"Speed of maximum wind gust in km/h" ))
table(is.na(asthma_month[,9] ))
table(is.na(asthma_week[,6] ))
table(is.na(asthmadata[,6] ))
table(is.na(asthmadata[,9] ))
###Weekly data generation
#Aloocation of the week number
asthmadata=cbind(data,week_no=((rep(c(1:596), each = 7)))[1:4169])
#Replacing NAs with avg of the most recent 3 wind readings
NA_ids=which(is.na(asthmadata$`Speed of maximum wind gust in km/h`)==TRUE)
for(j in NA_ids){
asthmadata[j,6]=mean(asthmadata[((j-3):(j-1)),6])
}
table(is.na(asthmadata[,9] ))
NA_ids
colnames(asthmadata)
asthmadata=cbind(data,week_no=((rep(c(1:596), each = 7)))[1:4169])
#Replacing NAs with avg of the most recent 3 wind readings
NA_ids=which(is.na(asthmadata$`Speed of maximum wind gust in km/h`)==TRUE)
for(j in NA_ids){
asthmadata[j,9]=mean(asthmadata[((j-3):(j-1)),9])
}
table(is.na(asthmadata[,9] ))
asthmadata1=asthmadata[,c(4:10)]
#Aggregating data
asthma_week=asthmadata1[1,]
for(i in 1:max(asthmadata1$week_no)){
sub1=asthmadata1[asthmadata1$week_no==i,]
sub2=sub1[dim(sub1)[1],]
sub2[,2:6]=colMeans(sub1[,2:6])
sub2[,1]=sum(sub1[,1])
asthma_week=rbind(asthma_week,sub2)
}
asthma_week=asthma_week[-1,]
asthma_week=ts(asthma_week)
table(is.na(asthma_week[,6] ))
colnamses(asthma_week)
colnames(asthma_week)
###Monthly data generation
asthmadata2=asthmadata[,c(1:9)]
asthma_month=asthmadata2[1,]
for (i1 in 2006:2017) {
sub1=asthmadata2[asthmadata2$Year==i1,]
for (i2 in 1:max(sub1$Month)) {
sub2=sub1[sub1$Month==i2,]
sub3=sub2[dim(sub2)[1],]
sub3[,5:9]=colMeans(sub2[,5:9])
sub3[,4]=sum(sub2[,4])
asthma_month=rbind(asthma_month,sub3)
}
}
asthma_month=asthma_month[-1,]
asthma_month=ts(asthma_month)
colnames(asthma_month)
table(is.na(asthma_month[,9] ))
i=5
ccf(datat[,i],datat[,4],na.action = na.omit)
acf(datat[,i])
diff1x=diff(datat[,i],1)
acf(diff1x, na.action = na.omit)
pacf(diff1x, na.action = na.omit)
auto.arima(datat[,i])
arima.x=arima(datat[,i],xreg=time(datat[,i]), order=c(5,0,0))
prewhiten(datat[,i],datat[,4],x.model=arima.max_temp)
library("TSA", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
prewhiten(datat[,i],datat[,4],x.model=arima.max_temp)
prewhiten(datat[,i],datat[,4],x.model=arima.x)
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x)
ccf (pwx,newpwy,na.action=na.omit)
?prewhiten
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x)
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x,
main="Max temp vs number of asthma cases")
prewhiten(datat[,i],datat[,4],x.model=arima.x)
newpwy = filter(datat[,4], filter = c(1,-0.36,-0.71,0.15,0.15,0.21,0.14), sides =1) #i=5
arimamodel = arima(datat[,i], order = c(5,0,0)) #i=5
pwx=arimamodel$residuals
val1=ccf (pwx,newpwy,na.action=na.omit)
val1
ccf (pwx,newpwy,na.action=na.omit)
i=6
auto.arima(datat[,i])
arima.x=arima(datat[,i],xreg=time(datat[,i]), order=c(5,0,0))
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x,
main="Min temp and number of asthma cases")
i=7
auto.arima(datat[,i])
arima.x=arima(datat[,i],xreg=time(datat[,i]), order=c(5,0,2))
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x,
main="Min humidity and number of asthma cases")
i=8
auto.arima(datat[,i])
arima.x=arima(datat[,i],xreg=time(datat[,i]), order=c(1,1,1))
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x,
main="Max humidity and number of asthma cases")
arima.x=arima(datat[,i],xreg=time(datat[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x,
main="Max humidity and number of asthma cases")
i=9
auto.arima(datat[,i])
arima.x=arima(datat[,i],xreg=time(datat[,i]), order=c(1,0,2))
prewhiten(arima.x$residuals,datat[,4],x.model=arima.x,
main="Max wind and number of asthma cases")
i=5
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
colnames(asthma_week)
i=2
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(5,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Max temp and number of asthma cases (Monthly)")
prewhiten(asthma_week[,i],asthma_week[,4],x.model=arima.x)
prewhiten(asthma_week[,i],asthma_week[,1],x.model=arima.x)
i
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Max temp and number of asthma cases (Monthly)")
i=3
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Min temp and number of asthma cases (Monthly)")
i=4
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Min humidity and number of asthma cases (Monthly)")
i=5
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Max humidity and number of asthma cases (Monthly)")
i=6
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Max wind and number of asthma cases (Monthly)")
i=2
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(5,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Max temp and number of asthma cases (Weekly)")
i=3
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Min temp and number of asthma cases (Weekly)")
i=4
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Min humidity and number of asthma cases (Weekly)")
i=5
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Max humidity and number of asthma cases (Weekly)")
i=6
auto.arima(asthma_week[,i])
arima.x=arima(asthma_week[,i],xreg=time(asthma_week[,i]), order=c(1,0,1))
prewhiten(arima.x$residuals,asthma_week[,1],x.model=arima.x,
main="Max wind and number of asthma cases (Weekly)")
colnames(asthma_month)
i=5
auto.arima(asthma_month[,i])
arima.x=arima(asthma_month[,i],xreg=time(asthma_month[,i]), order=c(4,0,1))
prewhiten(arima.x$residuals,asthma_month[,4],x.model=arima.x,
main="Max temp and number of asthma cases (Monthly)")
i=6
auto.arima(asthma_month[,i])
arima.x=arima(asthma_month[,i],xreg=time(asthma_month[,i]), order=c(4,0,1))
prewhiten(arima.x$residuals,asthma_month[,4],x.model=arima.x,
main="Min temp and number of asthma cases (Monthly)")
i=7
auto.arima(asthma_month[,i])
arima.x=arima(asthma_month[,i],xreg=time(asthma_month[,i]), order=c(2,0,2))
prewhiten(arima.x$residuals,asthma_month[,4],x.model=arima.x,
main="Min humidity and number of asthma cases (Monthly)")
i=8
auto.arima(asthma_month[,i])
arima.x=arima(asthma_month[,i],xreg=time(asthma_month[,i]), order=c(1,0,0))
prewhiten(arima.x$residuals,asthma_month[,4],x.model=arima.x,
main="Max humidity and number of asthma cases (Monthly)")
i=9
auto.arima(asthma_month[,i])
arima.x=arima(asthma_month[,i],xreg=time(asthma_month[,i]), order=c(3,0,1))
prewhiten(arima.x$residuals,asthma_month[,4],x.model=arima.x,
main="Max wind and number of asthma cases (Monthly)")
dim(asthma_week)
dim(asthma_month)
137/12
137-5
132/12
dim(z)
dim(x)
colnames(z)
i
install.packages(c("backports", "BH", "caTools", "checkmate", "class", "cluster", "codetools", "colorspace", "curl", "data.table", "digest", "epiR", "evaluate", "forcats", "foreign", "Formula", "ggplot2", "gplots", "gtools", "haven", "highr", "Hmisc", "hms", "htmlTable", "htmlwidgets", "jsonlite", "knitr", "lattice", "lme4", "maptools", "markdown", "MASS", "Matrix", "mgcv", "mime", "munsell", "nlme", "pROC", "quantreg", "R6", "RcppArmadillo", "RcppEigen", "readr", "readxl", "rio", "rmarkdown", "rpart", "rstudioapi", "scales", "stringi", "stringr", "survival", "tinytex", "utf8", "VGAM", "xfun", "yaml"))
library(readr)
pat_final <- read_csv("Downloads/pathology_final_updated_04062019_1.csv")
43486-43446
pat_final <- read_csv("~/Downloads/pathology_final_updated_04062019_1.csv")
library(devtools)
devtools::install_github('jrwishart/beamermq')
install.packages("devtools")
devtools::install_github('jrwishart/beamermq')
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'R@dius68')
R@dius68
install.packages(as.vector(needed_packages))
install.packages("readr")
install.packages("car")
install.packages("plyr")
install.packages("multcomp")
install.packages("ggplot2")
library(readr)
top3 <- read_csv("Downloads/whisky-top3.csv")
head(top3)
boxplot(Score ~ Country, data = top3,
ylab = "Whisky Score (normalised)", xlab = "Country") # optional labels
boxplot(Score ~ Country, data = top3,
ylab = "Whisky Score (normalised)", xlab = "Country") # optional labels
whisk.means = aggregate(Score ~ Country, mean, data = top3)
points(1:3, whisk.means$Score, pch = 4) # Add the sample means
1 - pf(4.4727, df1 = 2, df2 = 73)
library(readr)
rats <- read_csv("Downloads/ratsweights.csv")
head(rats)
boxplot(weight ~ diet, data = rats, horizontal = TRUE,
ylab = "Weight gain (g)", xlab = "Diet") # optional labels
boxplot(weight ~ diet, data = rats, horizontal = FALSE,
ylab = "Weight gain (g)", xlab = "Diet") # optional labels
top3.aov = aov(Score ~ Country, data = top3)
top3.aov
summary(top3.aov)
anova(top3.aov)
whiskyresid = residuals(top3.aov)
head(whiskyresid)
resid(top3.aov)
qqnorm(resid(top3.aov))
boxplot(Score ~ Country, data = top3)
top3fits = fitted(top3.aov)
head(top3fits)
plot(fitted(top3.aov), resid(top3.aov), # Minimal code this line
xlab = "Fitted values", ylab = "Residuals",
main = "Residuals vs Fitted") # Optional & Recommended labels
table(fitted(top3.aov))
table(top3$Country)
par(mfrow = c(2, 2))
plot(top3.aov)
par(mfrow = c(1, 2))
plot(top3.aov, which = 1:2)
bartlett.test(Score ~ Country, data = top3)
top2 = subset(top3, Country != "Canada") # Ignore Canada
anova(aov(Score ~ Country, data = top2))
t.test(Score ~ Country, var.equal = TRUE, data = top2)
library(readr)
maga <- read_table2("Downloads/maga.dat.txt")
maga
means = with(maga, tapply(sentence, magazine, mean))
means
sds = with(maga, tapply(sentence, magazine, sd))
sds
# Compute sample sizes
ns = with(maga, tapply(sentence, magazine, length))
# Create data frame summary
magasummary = data.frame(n = ns, mean = means, sd = sds)
magasummary
boxplot(sentence ~ magazine, data = maga)
par(mfrow = c(1,1))
boxplot(sentence ~ magazine, data = maga)
bartlett.test(sentence ~ factor(magazine), data = maga)
maga.aov = aov(sentence ~ factor(magazine), data = maga)
anova(maga.aov)
par(mfrow = c(1, 2))
plot(maga.aov, which = 1:2)
library(readr)
incendat <- read_csv("Downloads/incentivepay.csv")
means = with(incendat, tapply(Items, Plan, mean))
sds = with(incendat, tapply(Items, Plan, sd))
ns = with(incendat, tapply(Items, Plan, length))
incensummary = data.frame(n = ns, mean = means, sd = sds)
incensummary
inc.aov = aov(Items ~ factor(Plan), data = incendat)
anova(inc.aov)
head(incendat)
par(mfrow = c(1, 2))
plot(inc.aov, which = 1:2)
colnames(genderTVhairdat)
?mutate
?qf
qf(0.95,1,4)
pf(7.7086474,1,4)
pf(40.22,1,4)
1-pf(40.22,1,4)
?pt
pt(7.7086474,4)
1-2*pt(7.7086474,4)
1-pt(7.7086474,4)
1-pt(-7.7086474,4)
1-pt(6.3407,4)
2*(1-pt(6.3407,4))
1-pf(40.22,1,4)
6.3407^2
qt(0.975,4)
?apply
install.packages("devtools")
library(devtools)
library(shiny); runApp('/Volumes/Academic/Workshops/Shiny workshop/shiny-work-master/apps/intro-01.R')
runApp('/Volumes/Academic/Workshops/Shiny workshop/shiny-work-master/apps/intro-02.R')
runApp('/Volumes/Academic/Workshops/Shiny workshop/shiny-work-master/apps/intro-03.R')
runApp('/Volumes/Academic/Workshops/Shiny workshop/shiny-work-master/apps/intro-03.R')
runApp('/Volumes/Academic/Workshops/Shiny workshop/shiny-work-master/apps/intro-04.R')
runApp('/Volumes/Academic/Workshops/Shiny workshop/shiny-work-master/apps/NYCT-02.R')
runApp('/Volumes/Academic/Workshops/Shiny workshop/shiny-work-master/apps/NYCT-01.R')
reglin <- function(x, y) {
# x and y are two vectors of length n
n <- length(x)
xbar <- mean(x)
ybar <- mean(y)
x2bar <- mean(x ^ 2)
y2bar <- mean(y ^ 2)
xybar <- mean(x * y)
beta1hat <- (xybar - xbar * ybar) / (x2bar - xbar ^ 2)
beta0hat <- ybar - beta1hat * xbar
sigmahat <- sqrt(n * (y2bar + beta0hat ^ 2 + beta1hat ^ 2 * x2bar
- 2 * beta0hat * ybar - 2 * beta1hat * xybar
+ 2 * beta0hat * beta1hat * xbar) / (n - 2))
return(list(beta0hat = beta0hat, beta1hat = beta1hat, sigmahat = sigmahat))
}
ls
ls()
library("MySecondRPackage")
reglin
getwd()
library(MySecondRPackage)
getwd()
usethis::use_c("MySecondPackage")
setwd("/Volumes/Academic/Workshops/R functions")
setwd("/Volumes/Academic/Workshops/R functions/MySecondRPackage")
usethis::use_c("MySecondPackage")
